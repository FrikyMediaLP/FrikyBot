{
  "NewsFeed": {
    "description": "NewsFeed Package responsible for News and Updates.",
    "modules": {
      "CONSTANTS": "FrikyBot Module",
      "express": "npm",
      "fs": "NodeJS Module",
      "path": "NodeJS Module"
    },
    "variables": {
      "CONSTANTS": {
        "type": "CONSTANTS Module",
        "description": "Bot Constants used to generalize Outputs and Settings."
      },
      "express": {
        "type": "Express Module",
        "npm": "https://www.npmjs.com/package/express",
        "description": "Express WebApp hosting the Website and API."
      },
      "fs": {
        "type": "FileSystem Module",
        "description": "NodeJS File System interface to the Operating File System."
      },
      "path": {
        "type": "Path Module",
        "description": "Path Module used for manipulating FileSystem Paths."
      },
      "SETTINGS_REQUIERED": {
        "type": "Object",
        "description": "Requiered Config Settings."
      },
      "API_SETTINGS": {
        "type": "Object",
        "description": "API Settings for Querries and Requests."
      },
      "API_ENDPOINT_PARAMETERS": {
        "type": "Object",
        "description": "Querry Parameters for each API Endpoint."
      }
    },
    "classes": {
      "NewsFeed": {
        "description": "NewsFeed Package responsible for News and Updates.",
        "parent": {
          "name": "PackageBase",
          "from": { "name": "PackageBase", "type": "FrikyBot Module" }
        },
        "constructor": {
          "params": [
            {
              "name": "expressapp",
              "type": "Express.js:Express"
            },
            {
              "name": "twitchirc",
              "opt": true,
              "type": "TwitchIRC.js:TwitchIRC"
            },
            {
              "name": "twitchapi",
              "opt": true,
              "type": "TwitchAPI.js:TwitchAPI"
            },
            {
              "name": "datacollection",
              "opt": true,
              "type": "DataCollection.js:DataCollection"
            },
            {
              "name": "startparameters",
              "opt": true,
              "type": "Object"
            },
            {
              "name": "logger",
              "opt": true,
              "type": "Logger.js:Logger"
            }
          ],
          "description": "Calls the Parent PackageBase class constructor."
        },
        "functions": {
          "Init": {
            "params": null,
            "is-async": true,
            "description": "Starts the NewsFeed API, the FileRouters and the HTML Navigation."
          },
          "reload": {
            "params": null,
            "is-async": true,
            "description": "Reloads the News Data Files."
          },
          "CheckSettings": {
            "params": [
              {
                "name": "settings",
                "type": "Object"
              }
            ],
            "description": "Checks the Config for any missing Requiered Settings."
          },
          "LoadNews": {
            "params": null,
            "description": "Loads the News Data."
          },
          "ExportNews": {
            "params": null,
            "description": "Saves the News Data."
          },
          "getNews": {
            "params": [
              {
                "name": "param",
                "type": "Object"
              }
            ],
            "description": "Returns NewsPages based on the given Parameters from the News Dataset."
          },
          "getLatest": {
            "params": [
              {
                "name": "first",
                "opt": true,
                "type": "Number"
              },
              {
                "name": "pagination",
                "opt": true,
                "type": "Number"
              }
            ],
            "description": "Returns the latest NewsPages based on the given Pagination from the News Dataset."
          },
          "getOldest": {
            "params": [
              {
                "name": "first",
                "opt": true,
                "type": "Number"
              },
              {
                "name": "pagination",
                "opt": true,
                "type": "Number"
              }
            ],
            "description": "Returns the oldest NewsPages based on the given Pagination from the News Dataset."
          },
          "getDate": {
            "params": [
              {
                "name": "start",
                "opt": true,
                "type": "Number"
              },
              {
                "name": "end",
                "opt": true,
                "type": "Number"
              },
              {
                "name": "first",
                "opt": true,
                "type": "Number"
              },
              {
                "name": "pagination",
                "opt": true,
                "type": "Number"
              }
            ],
            "description": "Returns NewsPages based on the given Date Range and Pagination from the News Dataset. Start and End are UNIX Timestamps."
          },
          "getPage": {
            "params": [
              {
                "name": "pageString",
                "type": "String"
              }
            ],
            "description": "Returns the NewsPage behind the unique pageString."
          },
          "getTitle": {
            "params": [
              {
                "name": "titleString",
                "type": "String"
              }
            ],
            "description": "Returns the NewsPages with the given Title."
          },
          "validate": {
            "params": [
              {
                "name": "jsonData",
                "type": "Object"
              }
            ],
            "description": "Returns true, if the given News Data is valid, false otherwise."
          },
          "getPagination": {
            "params": [
              {
                "name": "first",
                "type": "Number"
              },
              {
                "name": "pagination",
                "type": "Number"
              },
              {
                "name": "autoInc",
                "opt": true,
                "type": "Boolean"
              }
            ],
            "description": "Translates the First and prev. Pagination into a new Pagination String."
          },
          "decryptPage": {
            "params": [
              {
                "name": "pageString",
                "type": "String"
              },
              {
                "name": "first",
                "type": "Number"
              }
            ],
            "description": "Returns a Number indicating the First News on the Page, Null or an Error-String otherwise."
          },
          "checkParams": {
            "params": [
              {
                "name": "req",
                "type": "Express.js:Request"
              },
              {
                "name": "res",
                "type": "Express.js:Response"
              },
              {
                "name": "next",
                "type": "Express.js:Next"
              }
            ],
            "description": "Middleware checking the Parameters of the Requested API Endpoint. Either forewards it or rejects the Request with \"Unknown Parameter: xy\"."
          },
          "charsInWrongOrder": {
            "params": [
              {
                "name": "s",
                "type": "String"
              },
              {
                "name": "charArr",
                "type": "Arr"
              }
            ],
            "description": "Checks the string s, if the given Chars in the charArr come in that order."
          }
        },
        "API": {
          "ROOT": "frikybot.de/News/api/",
          "Endpoints": [
            {
              "name": "Get Latest News",
              "endpoint": "/latest",
              "description": "Returns Latest News Pages.",
              "request": {
                "querry": {
                  "first": {
                    "type": "Number",
                    "opt": true,
                    "default": "10",
                    "description": "Number of NewsPages to Receive."
                  },
                  "pagination": {
                    "opt": true,
                    "type": "String",
                    "description": "Pagination String, a Cursor to the next/current/previous Dataset."
                  }
                }
              },
              "response": {
                "News": {
                  "type": "Array",
                  "description": "Collection of the Requested NewsPages."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if something internally broke, or you did :)"
                }
              }
            },
            {
              "name": "Get Oldest News",
              "endpoint": "/oldest",
              "description": "Returns Oldest News Pages.",
              "request": {
                "querry": {
                  "first": {
                    "opt": true,
                    "type": "Number",
                    "default": "10",
                    "description": "Number of NewsPages to Receive."
                  },
                  "pagination": {
                    "opt": true,
                    "type": "String",
                    "description": "Pagination String, a Cursor to the next/current/previous Dataset."
                  }
                }
              },
              "response": {
                "News": {
                  "type": "Array",
                  "description": "Collection of the Requested NewsPages."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if something internally broke, or you did :)"
                }
              }
            },
            {
              "name": "Get News",
              "endpoint": "/News",
              "description": "Returns News Pages.",
              "request": {
                "querry": {
                  "idx": {
                    "opt": true,
                    "type": "Number",
                    "description": "Index in the intern News Data Array."
                  },
                  "page": {
                    "opt": true,
                    "type": "String",
                    "description": "Unique Page Identifier String."
                  },
                  "title": {
                    "opt": true,
                    "type": "String",
                    "description": "News Title."
                  },
                  "date": {
                    "opt": true,
                    "type": "Number",
                    "description": "UNIX Date of the News. A range can be set like this: [DateA]-[DateB]"
                  },
                  "first": {
                    "opt": true,
                    "type": "Number",
                    "default": "10",
                    "description": "Number of NewsPages to Receive."
                  },
                  "pagination": {
                    "opt": true,
                    "type": "String",
                    "description": "Pagination String, a Cursor to the next/current/previous Dataset."
                  }
                }
              },
              "response": {
                "News": {
                  "type": "Array",
                  "description": "Collection of the Requested NewsPages."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if something internally broke, or you did :)"
                }
              }
            },
            {
              "name": "Publish News",
              "endpoint": "/Publish",
              "description": "Publish a News Page.",
              "restricted": "full",
              "request": {
                "method": "POST",
                "body": {
                  "data": {
                    "type": "Number",
                    "description": "Index in the intern News Data Array."
                  }
                }
              },
              "response": {
                "status": {
                  "type": "String",
                  "description": "Returns a confirmation String."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if something internally broke, or you did :)"
                }
              }
            }
          ]
        },
        "FileHosting": {
          "ROOT": "frikybot.de/News/",
          "Routes": {
            "/newsmaker": {
              "type": "redirect",
              "restricted": "full",
              "description": "Redirects to the NewsMaker Page, when you have access to it!"
            },
            "/scripts": {
              "type": "redirect",
              "description": "Redirects to the NewsFeed Css Stylesheet."
            },
            "/styles": {
              "type": "redirect",
              "description": "Redirects to the NewsFeed Javascript Script."
            },
            "/*": {
              "type": "redirect",
              "description": "Redirects to the acutal News Pages."
            }
          }
        }
      }
    },
    "exports": {
      "NewsFeed": "NewsFeed"
    }
  }
}