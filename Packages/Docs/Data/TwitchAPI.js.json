{
  "TwitchAPI": {
    "description": "Connection Module to the Twitch API.",
    "modules": {
      "express": "npm",
      "node-fetch": "npm",
      "fs": "NodeJS Module",
      "path": "NodeJS Module",
      "CONSTANTS": "FrikyBot Module"
    },
    "variables": {
      "express": {
        "type": "Express Module",
        "npm": "https://www.npmjs.com/package/express",
        "description": "Express WebApp hosting the Website and API."
      },
      "fs": {
        "type": "FileSystem Module",
        "description": "NodeJS File System interface to the Operating File System."
      },
      "path": {
        "type": "Path Module",
        "description": "Path Module used for manipulating FileSystem Paths."
      },
      "FETCH": {
        "type": "node-fetch Module",
        "npm": "https://www.npmjs.com/package/node-fetch",
        "description": "Javascript Fetch Method but in NodeJS."
      },
      "CONSTANTS": {
        "type": "CONSTANTS Module",
        "description": "Bot Constants used to generalize Outputs and Settings."
      },
      "TT_API_CLAIMS": {
        "type": "Object",
        "description": "All Twitch API Claims which can be sent when requesting user information."
      },
      "TT_API_SCOPES": {
        "type": "Object",
        "description": "All Twitch API Scopes which can be sent when requesting Access Tokens."
      },
      "CONFIG_TEMPLATE": {
        "type": "Object",
        "description": "Bot Config Template for the Twitch API Settings."
      }
    },
    "functions": {
      "writeFile": {
        "params": [
          {
            "name": "path",
            "type": "String"
          },
          {
            "name": "data",
            "type": "String"
          }
        ],
        "description": "Write data to a File."
      },
      "readFile": {
        "params": [
          {
            "name": "path",
            "type": "String"
          }
        ],
        "description": "Read data from a File."
      }
    },
    "classes": {
      "TwitchAPI": {
        "description": "The actual Class for interfacing and Maintaining Connection to the Twitch API.",
        "constructor": {
          "params": [
            {
              "name": "settings",
              "type": "Object"
            },
            {
              "name": "expressapp",
              "opt": true,
              "type": "Express.js:Express"
            },
            {
              "name": "twitchChat",
              "opt": true,
              "type": "TwitchIRC.js:TwitchIRC"
            },
            {
              "name": "logger",
              "opt": true,
              "type": "Logger.js:Logger"
            }
          ],
          "description": "Sets up all settings needed to interface the Twitch API and starts Webinterfaces."
        },
        "functions": {
          "Init": {
            "params": null,
            "is-async": true,
            "description": "Requests/Updates the App Access and User Access Tokens."
          },
          "getAppAccessToken": {
            "params": null,
            "is-async": true,
            "description": "Requests and returns a App Access Token."
          },
          "updateAppAccessToken": {
            "params": null,
            "is-async": true,
            "description": "Requests/Updates the App Access Token."
          },
          "generateUserAccessLinkCode": {
            "params": [
              {
                "name": "scopes",
                "type": "Array"
              },
              {
                "name": "claims",
                "opt": true,
                "type": "Object"
              }
            ],
            "description": "Returns a Querry String for Users to Log in using Twitch and return a Access Code. Used for Server Side Login,"
          },
          "generateUserAccessLinkToken": {
            "params": [
              {
                "name": "scopes",
                "type": "Array"
              },
              {
                "name": "claims",
                "opt": true,
                "type": "Object"
              }
            ],
            "description": "Returns a Querry String for Users to Log in using Twitch and return a Access Token. Used for Website Login."
          },
          "getUserAccessToken": {
            "params": [
              {
                "name": "code",
                "type": "String"
              }
            ],
            "is-async": true,
            "description": "Requests a User Access Token based on an Access Code."
          },
          "createUserAccessToken": {
            "params": [
              {
                "name": "code",
                "type": "String"
              },
              {
                "name": "scopes",
                "opt": true,
                "type": "Array"
              }
            ],
            "is-async": true,
            "description": "Requests a User Access Token, checks for IODC Infos and saves the User Access Token with extended information in a File."
          },
          "updateUserAccessToken": {
            "params": null,
            "is-async": true,
            "description": "Requests/Updates/Refreshes the User Access Token."
          },
          "revoke": {
            "params": [
              {
                "name": "token",
                "type": "String"
              }
            ],
            "is-async": true,
            "description": "Revokes a App Access Token."
          },
          "refresh": {
            "params": [
              {
                "name": "token",
                "type": "String"
              }
            ],
            "is-async": true,
            "description": "Refreshes a user Access Token."
          },
          "OIDCUserInfoEndpoint": {
            "params": [
              {
                "name": "oauth",
                "type": "String"
              }
            ],
            "is-async": true,
            "description": "Returns the IODC User Information Data provided by a Oauth Token."
          },
          "CheckAccessToken": {
            "params": [
              {
                "name": "token",
                "type": "String"
              }
            ],
            "is-async": true,
            "description": "Uses the Get Streams Twitch API Endpoint to check if the Access Token is valid."
          },
          "setExtraTokenDetails": {
            "params": [
              {
                "name": "token",
                "type": "Object"
              }
            ],
            "description": "Adds a \"created_at\"-Date and an \"expires_at\"-Date to the Token Object."
          },
          "saveToken": {
            "params": [
              {
                "name": "token",
                "type": "Object"
              },
              {
                "name": "type",
                "type": "String"
              }
            ],
            "description": "Saves a Token Object into its Token Directory."
          },
          "readTokensFromFile": {
            "params": [
              {
                "name": "type",
                "type": "String"
              }
            ],
            "description": "Returns all Tokens of the given type."
          },
          "getClaims": {
            "params": null,
            "description": "Returns the currently selected Claims."
          },
          "getQueryStringFromQueryParameters": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "description": "Returns the Object Encoded Querry Parameters converted into a propper String Querry."
          },
          "AccessTwitchNewAPI": {
            "params": [
              {
                "name": "ENDPOINT_URL",
                "type": "String"
              },
              {
                "name": "TOKEN_TYPE",
                "type": "String"
              },
              {
                "name": "METHOD",
                "opt": true,
                "type": "String"
              },
              {
                "name": "BODY",
                "opt": true,
                "type": "Object"
              },
              {
                "name": "RETURN_RAW",
                "opt": true,
                "type": "Boolean"
              },
              {
                "name": "RETRYS",
                "opt": true,
                "type": "Number"
              }
            ],
            "is-async": true,
            "description": "Master Twitch API Endpoint Interface Function! Collects the requiered Access Token and Header/Body Paramerts and returns the API Data or retries again."
          },
          "StartCommercial": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Start Commercial\""
          },
          "GetExtensionAnalytics": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Extension Analytics\""
          },
          "GetGameAnalytics": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Game Analytics\""
          },
          "GetCheermotes": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Cheermotes\""
          },
          "GetBitsLeaderboard": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Bits Leaderboard\""
          },
          "GetExtensionTransactions": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Extension Transactions\""
          },
          "CreateClip": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Create Clip\""
          },
          "GetClips": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Clips\""
          },
          "CreateEntitlementGrantsUploadURL": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              },
              {
                "name": "body",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Create Entitlement Grants Upload URL\""
          },
          "GetCodeStatus": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Code Status\""
          },
          "RedeemCode": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Redeem Code\""
          },
          "GetTopGames": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Top Games\""
          },
          "GetGames": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Games\""
          },
          "CheckAutoModStatus": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              },
              {
                "name": "body",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Check Auto Mod Status\""
          },
          "GetBannedUsers": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Banned Users\""
          },
          "GetBannedEvents": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Banned Events\""
          },
          "GetModerators": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Moderators\""
          },
          "GetModeratorEvents": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Moderator Events\""
          },
          "SearchCategories": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Search Categories\""
          },
          "SearchChannels": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Search Channels\""
          },
          "GetStreamKey": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Stream Key\""
          },
          "GetStreams": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Streams\""
          },
          "GetStreamsMetadata": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Streams Metadata\""
          },
          "CreateStreamMarker": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              },
              {
                "name": "body",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Create Stream Marker\""
          },
          "GetStreamMarkers": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Stream Markers\""
          },
          "GetChannelInformation": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Channel Information\""
          },
          "ModifyChannelInformation": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              },
              {
                "name": "body",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Modify Channel Information\""
          },
          "GetBroadcasterSubscriptions": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Broadcaster Subscriptions\""
          },
          "GetAllStreamTags": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get All Stream Tags\""
          },
          "GetStreamTags": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Stream Tags\""
          },
          "ReplaceStreamTags": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              },
              {
                "name": "body",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Replace Stream Tags\""
          },
          "CreateUserFollows": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              },
              {
                "name": "body",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Create User Follows\""
          },
          "DeleteUserFollows": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              },
              {
                "name": "body",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Delete User Follows\""
          },
          "GetUsers": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Users\""
          },
          "GetUsersFollows": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Users Follows\""
          },
          "UpdateUser": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              },
              {
                "name": "body",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Update User\""
          },
          "GetUserExtensions": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get User Extensions\""
          },
          "GetUserActiveExtensions": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get User Active Extensions\""
          },
          "UpdateUserExtensions": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Update User Extensions\""
          },
          "GetVideos": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Videos\""
          },
          "GetWebhookSubscriptions": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Webhook Subscriptions\""
          },
          "GetHypeTrainEvents": {
            "params": [
              {
                "name": "Query_Parameters",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Accesses the Twitch API Endpoint: \"Get Hype Train Events\""
          },
          "getBadges": {
            "params": null,
            "is-async": true,
            "description": "Returns all Twitch Chat Badges."
          },
          "getClientID": {
            "params": null,
            "description": "Returns the current Client ID."
          },
          "request": {
            "params": [
              {
                "name": "URL",
                "type": "String"
              },
              {
                "name": "options",
                "type": "Object"
              },
              {
                "name": "callback",
                "type": "Function"
              },
              {
                "name": "raw",
                "type": "Boolean"
              }
            ],
            "is-async": true,
            "description": "Uses Node Fetch to ... fetch API Data."
          },
          "setLogger": {
            "params": [
              {
                "name": "loggerObject",
                "type": "Object"
              }
            ],
            "description": "Sets the Console Logger. This Object needs an info(), a warn() nad an error() Function!"
          }
        }
      }
    },
    "exports": {
      "TwitchAPI": "TwitchAPI"
    }
  }
}