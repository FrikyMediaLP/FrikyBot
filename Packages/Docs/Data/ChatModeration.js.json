{
  "ChatModeration": {
    "description": "ChatModeration Module managing Filters and Timers.",
    "modules": {
      "CONSTANTS": "FrikyBot Module",
      "TwitchIRC": "FrikyBot Module",
      "CommandHandler": "FrikyBot Module",
      "BTTV": "FrikyBot Module",
      "FFZ": "FrikyBot Module",
      "path": "NodeJS Module",
      "fs": "NodeJS Module",
      "express": "npm",
      "nedb": "npm"
    },
    "variables": {
      "CONSTANTS": {
        "type": "CONSTANTS Module",
        "description": "Bot Constants used to generalize Outputs and Settings."
      },
      "TWITCHIRC": {
        "type": "TwitchIRC Module",
        "description": "Twitch Chat connection and Message Class."
      },
      "COMMANDHANDLER": {
        "type": "CommandHandler Module",
        "description": "CommandHandler checking Messages for Commands."
      },
      "BTTV": {
        "type": "BTTV Module",
        "description": "Better TwitchTV API Interface."
      },
      "FFZ": {
        "type": "FFZ Module",
        "description": "FrankerFaceZ API Interface."
      },
      "path": {
        "type": "Path Module",
        "description": "Path Module used for manipulating FileSystem Paths."
      },
      "fs": {
        "type": "FileSystem Module",
        "description": "NodeJS File System interface to the Operating File System."
      },
      "express": {
        "type": "Express Module",
        "npm": "https://www.npmjs.com/package/express",
        "description": "Express WebApp hosting the Website and API."
      },
      "Datastore": {
        "type": "nedb Module",
        "npm": "https://www.npmjs.com/package/nedb",
        "description": "Database Module for ... maintaining Databases."
      },
      "SETTINGS_REQUIERED": {
        "type": "Object",
        "description": "Requiered Config Settings + Default Values."
      },
      "PUNISHMENT": {
        "type": "Object",
        "description": "Contant Register of Punishment identifiers."
      }
    },
    "classes": {
      "ChatModeration": {
        "description": "Main Chat Modertation Class managing all Filters and Punishments.",
        "parent": {
          "name": "PackageBase",
          "from": {
            "name": "PackageBase",
            "type": "FrikyBot Module"
          }
        },
        "constructor": {
          "params": [
            {
              "name": "expressapp",
              "type": "Express.js:Express"
            },
            {
              "name": "twitchirc",
              "opt": true,
              "type": "TwitchIRC.js:TwitchIRC"
            },
            {
              "name": "twitchapi",
              "opt": true,
              "type": "TwitchAPI.js:TwitchAPI"
            },
            {
              "name": "datacollection",
              "opt": true,
              "type": "DataCollection.js:DataCollection"
            },
            {
              "name": "startparameters",
              "opt": true,
              "type": "Object"
            },
            {
              "name": "logger",
              "opt": true,
              "type": "Logger.js:Logger"
            }
          ],
          "description": "Calls the Parent PackageBase class constructor."
        },
        "variables": {
          "UserArchive": {
            "type": "Datastore",
            "description": "NEDB Database collecting all User Punishments."
          },
          "DebugDataBase": {
            "type": "Datastore",
            "description": "NEDB Database collecting all RAW Alerts."
          },
          "Permitted": {
            "type": "Object",
            "description": "All Users that are currently Permitted to Post ANYTHING!"
          },
          "Filters": {
            "type": "Object",
            "description": "All currently installed Chat Moderation Filters."
          },
          "Timers": {
            "type": "Object",
            "description": "All currently installed Timers."
          }
        },
        "functions": {
          "Init": {
            "params": null,
            "is-async": true,
            "description": "Sets up all Databases and Twitch Chat Messagehandlers. Also requests a Package Interconnect to set some Chat Commands."
          },
          "reload": {
            "params": null,
            "is-async": true,
            "description": "Reloads the Filters."
          },
          "CheckSettings": {
            "params": [
              {
                "name": "settings",
                "type": "Object"
              }
            ],
            "description": "Checks the Settings for any missing Keys."
          },
          "MessageEventHandler": {
            "params": [
              {
                "name": "channel",
                "type": "String"
              },
              {
                "name": "userstate",
                "type": "Object"
              },
              {
                "name": "message",
                "type": "String"
              },
              {
                "name": "self",
                "type": "Boolean"
              }
            ],
            "description": "Checks the Message sent in the Chat for any violations by the Filters and punishes that."
          },
          "permitUser": {
            "params": [
              {
                "name": "username",
                "type": "String"
              }
            ],
            "description": "Permits a User to write ANYTHING for a minute!"
          },
          "insertUser": {
            "params": [
              {
                "name": "channel",
                "type": "String"
              },
              {
                "name": "userstate",
                "type": "Object"
              },
              {
                "name": "message",
                "type": "String"
              },
              {
                "name": "filterObj",
                "type": "Object"
              },
              {
                "name": "filterOutput",
                "type": "String"
              },
              {
                "name": "streamData",
                "type": "Object"
              }
            ],
            "description": "Inserts Userdata into the Users Database."
          },
          "insertDebug": {
            "params": [
              {
                "name": "channel",
                "type": "String"
              },
              {
                "name": "userstate",
                "type": "Object"
              },
              {
                "name": "message",
                "type": "String"
              },
              {
                "name": "filterObj",
                "type": "Object"
              },
              {
                "name": "filterOutput",
                "type": "String"
              },
              {
                "name": "streamData",
                "type": "Object"
              }
            ],
            "description": "Inserts RAW Data into the Debug Database."
          },
          "addTimer": {
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "exec",
                "type": "Function"
              },
              {
                "name": "interval",
                "type": "Number"
              }
            ],
            "description": "Adds a Timer."
          },
          "removeTimer": {
            "params": [
              {
                "name": "name",
                "type": "String"
              }
            ],
            "description": "Removes a Timer."
          },
          "Chat_Command_ChatModeration": {
            "params": [
              {
                "name": "userMessageObj",
                "type": "Object"
              },
              {
                "name": "commandOrigin",
                "type": "Object"
              },
              {
                "name": "parameters",
                "type": "Array"
              }
            ],
            "description": "The !ChatModeration Command."
          },
          "Chat_Command_permit": {
            "params": [
              {
                "name": "userMessageObj",
                "type": "Object"
              },
              {
                "name": "commandOrigin",
                "type": "Object"
              },
              {
                "name": "parameters",
                "type": "Array"
              }
            ],
            "description": "The !permit Command."
          }
        },
        "API": {
          "ROOT": "frikybot.de/ChatModeration/api/",
          "Endpoints": [
            {
              "name": "Overview",
              "endpoint": "/Overview",
              "description": "Returns the current Filter Setup.",
              "request": null,
              "response": {
                "enabled": {
                  "type": "Boolean",
                  "description": "Current Chat Moderation State."
                },
                "Filter": {
                  "type": "Object",
                  "description": "Collection of all currently installed Chat Moderation Filters."
                }
              }
            }
          ]
        },
        "FileHosting": {
          "ROOT": "frikybot.de/ChatModeration/",
          "Routes": {
            "TBD": {
              "description": "TBD"
            }
          }
        }
      },
      "Filter": {
        "description": "Filter Parent Class.",
        "constructor": {
          "params": [
            {
              "name": "ChatModeration",
              "type": "ChatModeration"
            },
            {
              "name": "name",
              "type": "String"
            },
            {
              "name": "TwitchIRC",
              "type": "TwitchIRC.js:TwitchIRC"
            },
            {
              "name": "TwitchAPI",
              "type": "TwitchAPI.js:TwitchAPI"
            },
            {
              "name": "settings",
              "type": "Object"
            },
            {
              "name": "Logger",
              "type": "Any Logger Object"
            }
          ],
          "description": "Sets up the Filter Settings and Variables."
        },
        "variables": {
          "name": {
            "type": "String",
            "description": "Filter name"
          },
          "ChatModeration": {
            "type": "ChatModeration",
            "description": "ChatModeration Manager Class."
          },
          "Settings": {
            "type": "Object",
            "description": "Settings of the current Filter."
          },
          "TwitchIRC": {
            "type": "TwitchIRC.js:TwitchIRC",
            "description": "Twitch Chat Connection."
          },
          "TwitchAPI": {
            "type": "TwitchAPI.js:TwitchAPI",
            "description": "Twitch API Connection."
          },
          "Logger": {
            "type": "Any Logger Object",
            "description": "Console Logger."
          }
        },
        "functions": {
          "CheckMessage": {
            "params": [
              {
                "name": "msgObj",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Checks the given Message for any violations by the Filter."
          },
          "reload": {
            "params": null,
            "is-async": true,
            "description": "Reloads the Filter."
          },
          "Issue": {
            "params": [
              {
                "name": "msgObj",
                "type": "Object"
              },
              {
                "name": "punishment",
                "type": "Punishment"
              },
              {
                "name": "reason",
                "type": "String"
              },
              {
                "name": "specificIssue",
                "type": "String"
              },
              {
                "name": "punishment_length",
                "type": "String"
              }
            ],
            "description": "Returns the information given in a JSON format."
          },
          "sendResponse": {
            "params": [
              {
                "name": "codedString",
                "type": "String"
              },
              {
                "name": "msgObj",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Sends the given CodedString replaced with the msgObj Data in the Twitch Chat."
          },
          "getUserRecord": {
            "params": [
              {
                "name": "user_id",
                "type": "Number"
              },
              {
                "name": "stream_id",
                "type": "Number"
              }
            ],
            "is-async": true,
            "description": "Returns the past Punishments of the User in the given Stream by the the current Filter."
          },
          "executePunishment": {
            "params": [
              {
                "name": "msgObj",
                "type": "Object"
              },
              {
                "name": "chat_response",
                "type": "String"
              },
              {
                "name": "punishment",
                "type": "Punishment"
              },
              {
                "name": "punishment_length",
                "type": "Any"
              },
              {
                "name": "reason",
                "type": "String"
              }
            ],
            "is-async": true,
            "description": "Checks the given Punishment and executes the Punishment."
          },
          "GetName": {
            "params": null,
            "description": "Returns the set Filter name."
          },
          "GetSettings": {
            "params": null,
            "description": "Returns the Filter Settings."
          },
          "GetPublicSettings": {
            "params": null,
            "description": "Returns the limited \"Public Friendly\" / intern Filter Settings."
          },
          "enable": {
            "params": null,
            "description": "Enables the Filter."
          },
          "disable": {
            "params": null,
            "description": "Disables the Filter."
          },
          "isEnabled": {
            "params": null,
            "description": "Returns the current Enable State."
          }
        }
      },
      "Timer": {
        "description": "Timer Class sending automatic Messages in the Chat.",
        "constructor": {
          "params": [
            {
              "name": "name",
              "type": "String"
            },
            {
              "name": "ChatModeration",
              "type": "ChatModeration"
            },
            {
              "name": "exec",
              "type": "Function"
            },
            {
              "name": "interval",
              "type": "Number"
            },
            {
              "name": "settings",
              "type": "Object"
            }
          ],
          "description": "Sets up all given Parameters."
        },
        "variables": {
          "name": {
            "type": "String",
            "description": "Timers name"
          },
          "ChatModeration": {
            "type": "ChatModeration",
            "description": "ChatModeration Manager Class."
          },
          "Settings": {
            "type": "Object",
            "description": "Settings of the current Filter."
          },
          "error": {
            "type": "String",
            "description": "Error Text, if something went wrong."
          },
          "exec": {
            "type": "Function",
            "description": "Executed Function on every Timer Interval."
          }
        },
        "functions": {
          "start": {
            "params": null,
            "description": "Starts the Timer."
          },
          "stop": {
            "params": null,
            "description": "Stops the Timer."
          },
          "GetName": {
            "params": null,
            "description": "Returns the Timers name."
          },
          "test": {
            "params": null,
            "description": "Tests the TImer Configuration without Printing."
          },
          "enable": {
            "params": null,
            "description": "Enables the Timer. Does not start the Timer tho."
          },
          "disable": {
            "params": null,
            "description": "Disables and Stops the Timer."
          },
          "isEnabled": {
            "params": null,
            "description": "Returns the current Enable State."
          }
        }
      },
      "WordFilter": {
        "description": "Word Filter checking for specific Words on a Blacklist.",
        "modules": {
          "Filter": "ChatModeration::Filter"
        },
        "constructor": {
          "params": [
            {
              "name": "ChatModeration",
              "type": "ChatModeration"
            },
            {
              "name": "TwitchIRC",
              "type": "TwitchIRC.js:TwitchIRC"
            },
            {
              "name": "TwitchAPI",
              "type": "TwitchAPI.js:TwitchAPI"
            },
            {
              "name": "Logger",
              "type": "Any Logger Object"
            }
          ],
          "description": "Just calles the Parent constructor and loads the Blacklist Database."
        },
        "functions": {
          "CheckSetupAndEnviroument": {
            "params": null,
            "description": "Just Checks the Settings."
          },
          "reload": {
            "params": null,
            "is-async": true,
            "description": "Reloads the Blacklist Database."
          },
          "GetPublicSettings": {
            "params": null,
            "description": "Returns the Public Friendly Settings."
          },
          "CheckMessage": {
            "params": [
              {
                "name": "msgObj",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Checks the given Message for any violations by the Filter."
          },
          "loadDefaultBlacklist": {
            "params": null,
            "description": "Loads the Default Data for the Blacklist."
          },
          "CheckOneDBSearch": {
            "params": [
              {
                "name": "db",
                "type": "NEDB Datastore"
              },
              {
                "name": "querry",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Checks the given Databse with a querry."
          },
          "addWord": {
            "params": [
              {
                "name": "word",
                "type": "String"
              },
              {
                "name": "username",
                "type": "String"
              }
            ],
            "description": "Adds a Word from the Blacklist."
          },
          "removeWord": {
            "params": [
              {
                "name": "word",
                "type": "String"
              }
            ],
            "description": "Removes a Word from the Blacklist."
          }
        }
      },
      "SpamFilter": {
        "description": "Spam Filter Checking repetitive Chars/Emotes/... in the Message.",
        "constructor": {
          "params": [
            {
              "name": "ChatModeration",
              "type": "ChatModeration"
            },
            {
              "name": "TwitchIRC",
              "type": "TwitchIRC.js:TwitchIRC"
            },
            {
              "name": "TwitchAPI",
              "type": "TwitchAPI.js:TwitchAPI"
            },
            {
              "name": "Logger",
              "type": "Any Logger Object"
            }
          ],
          "description": "Calles the Parent Constructor and collects the BTTV and FFZ Emotes of the current Channel."
        },
        "variables": {
          "BTTV_Emotes": {
            "type": "Array",
            "description": "Collection of all BTTV Emotes."
          },
          "FFZ_Emotes": {
            "type": "Array",
            "description": "Collection of all FFZ Emotes."
          }
        },
        "functions": {
          "CheckSetupAndEnviroument": {
            "params": null,
            "description": "Just Checks the Settings."
          },
          "GetPublicSettings": {
            "params": null,
            "description": "Returns the Public Friendly Settings."
          },
          "CheckMessage": {
            "params": [
              {
                "name": "msgObj",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Checks the given Message for any violations by the Filter."
          }
        }
      },
      "LinkFilter": {
        "description": "Link Filter checking the Messages for Links.",
        "constructor": {
          "params": [
            {
              "name": "ChatModeration",
              "type": "ChatModeration"
            },
            {
              "name": "TwitchIRC",
              "type": "TwitchIRC.js:TwitchIRC"
            },
            {
              "name": "TwitchAPI",
              "type": "TwitchAPI.js:TwitchAPI"
            },
            {
              "name": "Logger",
              "type": "Any Logger Object"
            }
          ],
          "description": "Calles the Parent Constructor and Sets up the Blacklist and Whitelist."
        },
        "variables": {
          "Whitelist": {
            "type": "NEDB Datastore",
            "description": "Collection of Whitelisted Links."
          },
          "Blacklist": {
            "type": "NEDB Datastore",
            "description": "Collection of Blacklisted Links."
          }
        },
        "functions": {
          "CheckSetupAndEnviroument": {
            "params": null,
            "description": "Just Checks the Settings."
          },
          "GetPublicSettings": {
            "params": null,
            "description": "Returns the Public Friendly Settings."
          },
          "CheckMessage": {
            "params": [
              {
                "name": "msgObj",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Checks the given Message for any violations by the Filter."
          },
          "CheckOneDBSearch": {
            "params": [
              {
                "name": "db",
                "type": "NEDB Datastore"
              },
              {
                "name": "querry",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Checks the given Databse with a querry."
          },
          "findLinks": {
            "params": [
              {
                "name": "messageString",
                "type": "String"
              }
            ],
            "description": "Checks the given Message for any Links and removes any \"http://\" / \"https://\" or \"www.\" ."
          },
          "getDomain": {
            "params": [
              {
                "name": "URL",
                "type": "String"
              }
            ],
            "description": "Returns the Domain Name of the given URL."
          },
          "getSubDomain": {
            "params": [
              {
                "name": "URL",
                "type": "String"
              }
            ],
            "description": "Returns the SubDomain Name of the given URL."
          },
          "blockDomain": {
            "params": [
              {
                "name": "domain",
                "type": "String"
              }
            ],
            "description": "Sets the Domain on the Blacklist and removes it from the Whitelist."
          },
          "permitDomain": {
            "params": [
              {
                "name": "domain",
                "type": "String"
              }
            ],
            "description": "Removes the Domain from the Blacklist and sets it on the Whitelist."
          },
          "blockSubDomain": {
            "params": [
              {
                "name": "subdomain",
                "type": "String"
              }
            ],
            "description": "Sets the SubDomain on the Blacklist and removes it on the Whitelist."
          },
          "permitSubDomain": {
            "params": [
              {
                "name": "subdomain",
                "type": "String"
              }
            ],
            "description": "Removes the SubDomain from the Blacklist and sets it on the Whitelist."
          },
          "blockURL": {
            "params": [
              {
                "name": "URL",
                "type": "String"
              }
            ],
            "description": "Sets the URL on the Blacklist and removes it on the Whitelist."
          },
          "permitURL": {
            "params": [
              {
                "name": "URL",
                "type": "String"
              }
            ],
            "description": "Removes the URL from the Blacklist and sets it on the Whitelist."
          }
        }
      }
    },
    "exports": {
      "ChatModeration": "ChatModeration"
    }
  }
}