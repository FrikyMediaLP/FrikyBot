{
  "CommandHandler": {
    "description": "CommandHandler Module for your Classic Chat Commands.",
    "modules": {
      "express": "npm",
      "node-fetch": "npm",
      "fs": "NodeJS Module",
      "path": "NodeJS Module",
      "TwitchIRC": "FrikyBot Module",
      "CONSTANTS": "FrikyBot Module"
    },
    "variables": {
      "express": {
        "type": "Express Module",
        "npm": "https://www.npmjs.com/package/express",
        "description": "Express WebApp hosting the Website and API."
      },
      "fs": {
        "type": "FileSystem Module",
        "description": "NodeJS File System interface to the Operating File System."
      },
      "path": {
        "type": "Path Module",
        "description": "Path Module used for manipulating FileSystem Paths."
      },
      "FETCH": {
        "type": "Node Fetch Module",
        "npm": "https://www.npmjs.com/package/node-fetch",
        "description": "A light-weight module that brings window.fetch to Node.js."
      },
      "TWITCHIRC": {
        "type": "TwitchIRC Module",
        "description": "TwitchIRC Module - used for the Message Class."
      },
      "CONSTANTS": {
        "type": "CONSTANTS Module",
        "description": "Bot Constants used to generalize Outputs and Settings."
      },
      "COMMAND_TEMPLATE": {
        "type": "Object",
        "description": "Template for Command Data."
      },
      "COMMAND_TEMPLATE_REQUIRED": {
        "type": "Object",
        "description": "The REQUIERED Template Fields for Command Data."
      },
      "TIMER_TEMPLATE": {
        "type": "Object",
        "description": "Template for Timer Data."
      },
      "TIMER_TEMPLATE_REQUIRED": {
        "type": "Object",
        "description": "The REQUIERED Template Fields for Timer Data."
      },
      "PACKAGE_DETAILS": {
        "type": "Object",
        "description": "Package Information Details"
      }
    },
    "classes": {
      "CommandHandler": {
        "description": "CommandHandler Class bringing you the classic Chat Commands Experience and more!",
        "parent": {
          "name": "PackageBase",
          "from": {
            "name": "PackageBase",
            "type": "FrikyBot Module"
          }
        },
        "constructor": {
          "params": [
            {
              "name": "webappinteractor",
              "type": "WebApp.js::WebAppInteractor"
            },
            {
              "name": "twitchirc",
              "type": "TwitchIRC.js:TwitchIRC"
            },
            {
              "name": "twitchapi",
              "type": "TwitchAPI.js:TwitchAPI"
            },
            {
              "name": "datacollection",
              "type": "DataCollection.js:DataCollection"
            },
            {
              "name": "logger",
              "opt": true,
              "type": "Logger.js:Logger"
            }
          ],
          "description": "Calls the Parent PackageBase class constructor."
        },
        "variables": {
          "CommandVariables": {
            "type": "Object",
            "description": "Collection of all the Command Variables that can be used in a Command."
          },
          "CustomVariables": {
            "type": "Object",
            "description": "The Custom Variables Contents."
          },
          "CustomCommands": {
            "type": "Array",
            "description": "Collection of all Custom Commands."
          },
          "onCooldown": {
            "type": "Array",
            "description": "Collection of all Commands on Cooldown. They are only removed, when they are called again after their cooldown ended."
          },
          "HardcodedCommands": {
            "type": "Object",
            "description": "Collection of all Hardcoded Commands."
          },
          "Timers": {
            "type": "Array",
            "description": "Collection of all Custom Timers."
          },
          "ActiveTimers": {
            "type": "Array",
            "description": "Collection of all Active Timers and their Intervals."
          }
        },
        "functions": {
          "Init": {
            "params": [
              {
                "name": "startparameters",
                "type": "String"
              }
            ],
            "is-async": true,
            "description": "Initiates/Loads all Variables and sets up the TwitchIRC Callback when Messages are sent."
          },
          "reload": {
            "params": null,
            "is-async": true,
            "description": "Reloads the Comamnds/Variables/Custom Variables Data."
          },
          "disable": {
            "params": null,
            "is-async": true,
            "description": "Disable Active Timers."
          },
          "CommandHandler": {
            "params": [
              {
                "name": "messageObj",
                "type": "Object"
              }
            ],
            "is-async": true,
            "description": "Called when a Message was sent in the Twitch Chat, checks it for Commands and Executes them if the met their individual Userleves/Detection Types/..."
          },
          "checkMessage": {
            "params": [
              {
                "name": "messageObj",
                "type": "Object"
              }
            ],
            "description": "Checks the Message for Commands. Returns an Array of alle used Commands sorted by their appearance."
          },
          "checkCuEnvironment": {
            "params": [
              {
                "name": "commandObj",
                "type": "Object"
              },
              {
                "name": "messageObj",
                "type": "Object"
              }
            ],
            "description": "Checks the used Custom Commands for the right Userlevel and onCooldown Status."
          },
          "executeCuCommand": {
            "params": [
              {
                "name": "commandObj",
                "type": "Object"
              },
              {
                "name": "messageObj",
                "type": "Object"
              },
              {
                "name": "parameters",
                "type": "Array"
              }
            ],
            "is-async": true,
            "description": "Command Variables are replaced based on the given Parameters and Message/Userstate, then the Command is executed/ the Output String is sent into the Twitch Chat."
          },
          "fillCommandVariables": {
            "params": [
              {
                "name": "commandObj",
                "type": "Object"
              },
              {
                "name": "messageObj",
                "type": "Object"
              },
              {
                "name": "parameters",
                "type": "Array"
              }
            ],
            "is-async": true,
            "description": "Iterativly tries to replace Command Variables until all are replaced or an Error is found."
          },
          "replaceVariables": {
            "params": [
              {
                "name": "filledString",
                "type": "String"
              },
              {
                "name": "commandObj",
                "type": "Object"
              },
              {
                "name": "origCommand",
                "type": "Object"
              },
              {
                "name": "parameters",
                "type": "Array"
              }
            ],
            "is-async": true,
            "description": "Replaces all inner-most-cascaded found Variables from the filledString with the Command Variables that are enabled."
          },
          "extractVariables": {
            "params": [
              {
                "name": "commandOutString",
                "type": "String"
              }
            ],
            "description": "Extracts all inner-most-cascaded found Variables from the commandOutString."
          },
          "addCooldown": {
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "relative_endtime",
                "type": "Number"
              }
            ],
            "description": "Adds a Command to the onCooldown List with the given End-Time."
          },
          "removeCooldown": {
            "params": [
              {
                "name": "name",
                "type": "String"
              }
            ],
            "description": "Remove a Command from the onCooldown List."
          },
          "isOnCooldown": {
            "params": [
              {
                "name": "name",
                "type": "String"
              }
            ],
            "description": "Checks if the given Command is currently on Cooldown. This also removes it from the Cooldown List, when no longer on Cooldown."
          },
          "addHardcodedCommands": {
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "HCCommandObj",
                "type": "HCCommand"
              }
            ],
            "description": "Adds a Hardcoded Command."
          },
          "removeHardcodedCommands": {
            "params": [
              {
                "name": "name",
                "type": "String"
              }
            ],
            "description": "Remove a Hardcoded Command."
          },
          "loadCommands": {
            "params": null,
            "description": "Loads the previous created Custom Commands."
          },
          "saveCommands": {
            "params": null,
            "description": "Save the current Custom Commands."
          },
          "addCommand": {
            "params": [
              {
                "name": "command",
                "type": "Object"
              },
              {
                "name": "user",
                "type": "String"
              }
            ],
            "description": "Adds a Custom Command."
          },
          "editCommand": {
            "params": [
              {
                "name": "command",
                "type": "Object"
              },
              {
                "name": "user",
                "type": "String"
              }
            ],
            "description": "Edit a Custom Command."
          },
          "renameCommand": {
            "params": [
              {
                "name": "oldName",
                "type": "String"
              },
              {
                "name": "newName",
                "type": "String"
              },
              {
                "name": "user",
                "type": "String"
              }
            ],
            "description": "Rename a Custom Command."
          },
          "removeCommand": {
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "user",
                "type": "String"
              }
            ],
            "description": "Delete a Custom Command."
          },
          "validate": {
            "params": [
              {
                "name": "customCommand",
                "type": "Object"
              }
            ],
            "description": "Checks the given Command for the requiered Parameters and Syntax."
          },
          "loadVariables": {
            "params": null,
            "description": "Loads the previous created Custom Command Variables Content."
          },
          "saveVariables": {
            "params": null,
            "description": "Saves the current Custom Command Variables Content."
          },
          "editCustomVariable": {
            "params": [
              {
                "name": "path",
                "type": "String"
              },
              {
                "user": "data",
                "type": "Any"
              },
              {
                "user": "user",
                "type": "String"
              }
            ],
            "description": "Creates a new or updates an old Custom Command Variable at the given path."
          },
          "removeCustomVariable": {
            "params": [
              {
                "name": "path",
                "type": "String"
              },
              {
                "user": "user",
                "type": "String"
              }
            ],
            "description": "Removes a Custom Command Variable at the given path."
          },
          "loadTimers": {
            "params": null,
            "description": "Loads the previous created Timers."
          },
          "saveTimers": {
            "params": null,
            "description": "Saves the current Timers."
          },
          "addTimer": {
            "params": [
              {
                "name": "timer",
                "type": "Object"
              },
              {
                "name": "user",
                "type": "String"
              }
            ],
            "description": "Adds a new Timer."
          },
          "editTimer": {
            "params": [
              {
                "name": "timer",
                "type": "Object"
              },
              {
                "name": "user",
                "type": "String"
              }
            ],
            "description": "Edits a Timer."
          },
          "removeTimer": {
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "user",
                "type": "String"
              }
            ],
            "description": "Removes a Timer."
          },
          "renameTimer": {
            "params": [
              {
                "name": "oldName",
                "type": "String"
              },
              {
                "name": "newName",
                "type": "String"
              },
              {
                "name": "user",
                "type": "String"
              }
            ],
            "description": "Renames a Timer."
          },
          "validateTimer": {
            "params": [
              {
                "name": "timer",
                "type": "Object"
              }
            ],
            "description": "Checks the given Timer for the requiered Parameters and Syntax."
          },
          "validateName": {
            "params": [
              {
                "name": "name",
                "type": "String"
              }
            ],
            "description": "Checks the given Name for conform Characters and duplicates."
          },
          "getFormatedStringVariables": {
            "params": [
              {
                "name": "string",
                "type": "String"
              }
            ],
            "description": "Returns a Variable List embedded into the String."
          },
          "getObjectFromPath": {
            "params": [
              {
                "name": "obj",
                "type": "Object"
              },
              {
                "name": "path",
                "type": "String"
              }
            ],
            "description": "Returns the Object inside an Object at the given Path."
          },
          "createObjectPath": {
            "params": [
              {
                "name": "obj",
                "type": "Object"
              },
              {
                "name": "path",
                "type": "String"
              }
            ],
            "description": "Creates Objects along the given Path inside an Object."
          },
          "setObjectAtPath": {
            "params": [
              {
                "name": "obj",
                "type": "Object"
              },
              {
                "name": "path",
                "type": "String"
              },
              {
                "name": "value",
                "type": "Any"
              }
            ],
            "description": "Updates or Creates an Object Value at the given Path."
          },
          "deleteObjectAtPath": {
            "params": [
              {
                "name": "obj",
                "type": "Object"
              },
              {
                "name": "path",
                "type": "String"
              }
            ],
            "description": "Removes a given Object Key at the given Path."
          },
          "getRelativeTimeString": {
            "params": [
              {
                "name": "timeMS",
                "type": "Number"
              },
              {
                "name": "cut_at_day",
                "type": "Boolean"
              }
            ],
            "description": "Returns a String that represents a relative Time in a Human readable format."
          },
          "parseCooldownString": {
            "params": [
              {
                "name": "cooldownString",
                "type": "String"
              }
            ],
            "description": "Returns the number of seconds the cooldownString represents."
          }
        },
        "API": {
          "Endpoints": [
            {
              "name": "Get Commands",
              "endpoint": "/Commands",
              "description": "Returns Hardcoded and Custom Commands. Moderators also get disabled Commands.",
              "restriction": "partial",
              "request": null,
              "response": {
                "Custom": {
                  "type": "Array",
                  "description": "Collection of Custom Commands."
                },
                "Hardcoded": {
                  "type": "Object",
                  "description": "Collection of Hardcoded Commands."
                }
              }
            },
            {
              "name": "Add a Command",
              "endpoint": "/Commands",
              "restricted": "full",
              "description": "Creates a new Custom Command.",
              "request": {
                "method": "POST",
                "body": {
                  "command": {
                    "type": "Object",
                    "description": "Command Data: name, output, userlevel, etc."
                  }
                }
              },
              "response": {
                "data": {
                  "type": "String",
                  "description": "Confirmation that the Command has been created successfully."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Rename a Command",
              "restricted": "full",
              "endpoint": "/Commands",
              "description": "Rename a Custom Command.",
              "request": {
                "method": "MOVE",
                "body": {
                  "oldname": {
                    "type": "String",
                    "description": "Name of the old Command to be removed."
                  },
                  "newname": {
                    "type": "String",
                    "description": "Name of the new Command to be created."
                  }
                }
              },
              "response": {
                "data": {
                  "type": "String",
                  "description": "Confirmation that the Command has been renamed successfully."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Edit a Command",
              "restricted": "full",
              "endpoint": "/Commands",
              "description": "Edit a Custom Command.",
              "request": {
                "method": "PUT",
                "body": {
                  "command": {
                    "type": "Object",
                    "description": "Command Data: output, userlevel, etc."
                  }
                }
              },
              "response": {
                "data": {
                  "type": "String",
                  "description": "Confirmation that the Command has been editted successfully."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Remove a Command",
              "restricted": "full",
              "endpoint": "/Commands",
              "description": "Removes a Custom Command.",
              "request": {
                "method": "DELETE",
                "body": {
                  "name": {
                    "type": "String",
                    "description": "Name of the Command to be removed."
                  }
                }
              },
              "response": {
                "data": {
                  "type": "String",
                  "description": "Confirmation that the Command has been removed successfully."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Get Command Variables",
              "restricted": "partial",
              "endpoint": "/Variables",
              "description": "Get Command Variables. Moderators also get disabled Commands.",
              "request": null,
              "response": {
                "variables": {
                  "type": "Object",
                  "description": "Collection of the Command Variables."
                }
              }
            },
            {
              "name": "Get Custom Variables Content",
              "endpoint": "/variables/custom",
              "description": "Get the Custom Command Variables Content.",
              "request": null,
              "response": {
                "data": {
                  "type": "Object",
                  "description": "Collection of the Custom Command Requested Variables Content."
                }
              }
            },
            {
              "name": "Update Custom Variables",
              "endpoint": "/variables/custom",
              "description": "Add/Edit a Custom Command Variable.",
              "restricted": "full",
              "request": {
                "method": "PUT",
                "body": {
                  "path": {
                    "type": "String",
                    "description": "A dot-seperated Path to a specific Key inside the Command Variable Contents Object."
                  },
                  "data": {
                    "type": "any",
                    "description": "The Value u want to set to the Path."
                  }
                }
              },
              "response": {
                "code": {
                  "type": "200",
                  "description": "Returns HTTP Status Code 200 - OK."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Delete Custom Variables",
              "endpoint": "/variables/custom",
              "description": "Delete a Custom Command Variable.",
              "restricted": "full",
              "request": {
                "method": "DELETE",
                "body": {
                  "path": {
                    "type": "String",
                    "description": "A dot-seperated Path to a specific Key."
                  }
                }
              },
              "response": {
                "code": {
                  "type": "200",
                  "description": "Returns HTTP Status Code 200 - OK."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Get Commands on Cooldown",
              "endpoint": "/OnCooldown",
              "description": "Get all Commands currently on Cooldown.",
              "request": null,
              "response": {
                "onCooldown": {
                  "type": "Array",
                  "description": "Collection of the Commands currently on Cooldown."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Get Timers",
              "endpoint": "/timers",
              "restricted": "full",
              "description": "Get all Timers.",
              "request": null,
              "response": {
                "Timers": {
                  "type": "Array",
                  "description": "Collection of all Timers."
                },
                "ActiveTimers": {
                  "type": "Array",
                  "description": "Collection of all Active Timers."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Add Timers",
              "endpoint": "/timers",
              "restricted": "full",
              "description": "Add a Timers.",
              "request": {
                "method": "POST",
                "body": {
                  "timer": {
                    "type": "Object",
                    "description": "Timer Data: name, output, userlevel, etc."
                  }
                }
              },
              "response": {
                "code": {
                  "type": "200",
                  "description": "Return HTTP Status Code 200 - OK."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Edit Timers",
              "endpoint": "/timers",
              "restricted": "full",
              "description": "Edit a Timers.",
              "request": {
                "method": "PUT",
                "body": {
                  "timer": {
                    "type": "Object",
                    "description": "Timer Data: name, output, userlevel, etc."
                  }
                }
              },
              "response": {
                "code": {
                  "type": "200",
                  "description": "Return HTTP Status Code 200 - OK."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Start Timers",
              "endpoint": "/timers",
              "restricted": "full",
              "description": "Start a Timers.",
              "request": {
                "method": "UNLOCK",
                "body": {
                  "name": {
                    "type": "String",
                    "description": "Name of the Timer to start."
                  }
                }
              },
              "response": {
                "code": {
                  "type": "200",
                  "description": "Return HTTP Status Code 200 - OK."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Stop Timers",
              "endpoint": "/timers",
              "restricted": "full",
              "description": "Stop a Timers.",
              "request": {
                "method": "LOCK",
                "body": {
                  "name": {
                    "type": "String",
                    "description": "Name of the Timer to stop."
                  }
                }
              },
              "response": {
                "code": {
                  "type": "200",
                  "description": "Return HTTP Status Code 200 - OK."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Rename Timers",
              "endpoint": "/timers",
              "restricted": "full",
              "description": "Rename a Timers.",
              "request": {
                "method": "MOVE",
                "body": {
                  "oldname": {
                    "type": "String",
                    "description": "Name of the Timer to rename."
                  },
                  "newname": {
                    "type": "String",
                    "description": "New Name of the Timer."
                  }
                }
              },
              "response": {
                "data": {
                  "type": "String",
                  "description": "Returns a confirmation string message."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            },
            {
              "name": "Remove Timers",
              "endpoint": "/timers",
              "restricted": "full",
              "description": "Remove a Timers.",
              "request": {
                "method": "DELETE",
                "body": {
                  "name": {
                    "type": "String",
                    "description": "Name of the Timer to remove."
                  }
                }
              },
              "response": {
                "code": {
                  "type": "200",
                  "description": "Return HTTP Status Code 200 - OK."
                },
                "err": {
                  "type": "String",
                  "description": "Error is returned if u messed up ... or the server did :)"
                }
              }
            }
          ]
        },
        "FileHosting": {
          "ROOT": "Commands/",
          "Static": "html",
          "Routes": {
            "/": {
              "type": "normal",
              "restricted": "partial",
              "description": "Interface to look up, add or edit Commands."
            },
            "/variables": {
              "type": "redirect",
              "restricted": "partial",
              "description": "Look up Command Variables - also Custom Command Variables for Moderators."
            }
          }
        }
      },
      "HCCommand": {
        "description": "Hardcoded Command Class - checking, executing, etc. Hardcoded Commands.",
        "constructor": {
          "params": [
            {
              "name": "name",
              "type": "String"
            },
            {
              "name": "callback",
              "type": "Function"
            },
            {
              "name": "options",
              "opt": true,
              "type": "Object"
            }
          ],
          "description": "Just sets the HCCommand-Class Variables."
        },
        "variables": {
          "name": {
            "type": "String",
            "description": "Command Name that triggers the Command."
          },
          "description": {
            "type": "String",
            "description": "Command Description."
          },
          "cooldown": {
            "type": "String",
            "default": "1s",
            "description": "Command cooldown String. e.g. 5m, 2s or 5m2s, etc"
          },
          "userlevels": {
            "type": "String",
            "default": "Regular",
            "description": "Requiered Userlevel to trigger the Command."
          },
          "detection_type": {
            "type": "String",
            "default": "beginning_only_detection",
            "description": "Detection Mode when checking for Commands in the Users Message."
          },
          "enabled": {
            "type": "String",
            "default": "true",
            "description": "Command Enable Setting."
          },
          "callback": {
            "type": "Function",
            "default": "returns true",
            "description": "The Hardcoded part, Callback Function when a Command is executed."
          }
        },
        "functions": {
          "execute": {
            "params": [
              {
                "name": "userMessageObj",
                "type": "Object"
              },
              {
                "name": "parameters",
                "type": "Array"
              }
            ],
            "is-async": true,
            "description": "Checks Command Cooldown and Userlevel and then executes the Commandm, if the conditions are met."
          },
          "checkEnvironment": {
            "params": [
              {
                "name": "userMessageObj",
                "type": "Object"
              }
            ],
            "description": "Checks Command Cooldown and Userlevel, returns False if either or both arent met."
          },
          "matchUserlevel": {
            "params": [
              {
                "name": "userMessageObj",
                "type": "Object"
              }
            ],
            "description": "Checks if the Command and User Userlevel match."
          },
          "isEnabled": {
            "params": null,
            "description": "Returns the current Command Enable Status."
          },
          "getName": {
            "params": null,
            "description": "Returns the Command Name."
          },
          "toJSON": {
            "params": null,
            "description": "Returns the Command Data in a JSON Format."
          }
        }
      },
      "Variable": {
        "description": "Command Variable Class.",
        "constructor": {
          "params": [
            {
              "name": "name",
              "type": "String"
            },
            {
              "name": "details",
              "type": "Object"
            },
            {
              "name": "callback",
              "type": "Function"
            },
            {
              "name": "enabled",
              "opt": true,
              "type": "Boolean"
            }
          ],
          "description": "Just sets the Variable-Class Variables."
        },
        "variables": {
          "name": {
            "type": "String",
            "description": "Variable Name, not the identifier!!."
          },
          "details": {
            "type": "String",
            "description": "Variable Details/Description."
          },
          "enabled": {
            "type": "String",
            "default": "true",
            "description": "Variable Enable Setting."
          },
          "callback": {
            "type": "Function",
            "default": "undefined",
            "description": "The Hardcoded part, Callback Function when a Command is executed."
          }
        },
        "functions": {
          "getValue": {
            "params": [
              {
                "name": "variableString",
                "type": "String"
              },
              {
                "name": "userMessageObj",
                "type": "Object"
              },
              {
                "name": "commandOrigin",
                "type": "Object"
              },
              {
                "name": "parameters",
                "type": "Array"
              }
            ],
            "is-async": true,
            "description": "Returns the Value of this Custom Command Variable by calling the set callback Function."
          },
          "getDetails": {
            "params": null,
            "description": "Returns the Variable Details."
          },
          "getExtendedDetails": {
            "params": null,
            "description": "Returns the Variable Details and Enable State."
          },
          "getName": {
            "params": null,
            "description": "Returns the Variable Name."
          },
          "isEnabled": {
            "params": null,
            "description": "Returns the current Variable Enable Status."
          },
          "enable": {
            "params": null,
            "description": "Enables the Variable."
          },
          "disable": {
            "params": null,
            "description": "Disables the Variable."
          }
        }
      }
    },
    "exports": {
      "CommandHandler": "CommandHandler",
      "HCCommand": "HCCommand",
      "Variable": "Variable"
    }
  }
}