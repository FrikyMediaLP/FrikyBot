{
  "COMMANDS": {
    "Hardcoded": [
      {
        "uid": -1,
        "name": "!game",
        "cooldown": "1m",
        "output": "For Mods (with parameter): changing Game - For Others (Mods without Parameters too): Displays current Game",
        "enabled": true,
        "detection_type": "multi_detection",
        "userlevel": "Moderator"
      },
      {
        "uid": -2,
        "name": "!resetData",
        "cooldown": "1m",
        "output": "For Mods (with parameter): reset Data to normal",
        "enabled": true,
        "detection_type": "beginning_only",
        "userlevel": "Moderator"
      }
    ],
    "Custom": [
      {
        "uid": 0,
        "name": "!DPS",
        "cooldown": "1s",
        "output": "Friky ist grade $(OWRankName $(SR.Season$(SR.CurrentSeason).DPS)) mit $(SR.Season$(SR.CurrentSeason).DPS) SR als DPS!",
        "enabled": true,
        "detection_type": "multi_detection",
        "userlevel": "Subscriber"
      },
      {
        "uid": 1,
        "name": "!TANK",
        "cooldown": "5m",
        "output": "Friky ist grade $(OWRankName $(SR.Season$(SR.CurrentSeason).Tank)) mit $(SR.Season$(SR.CurrentSeason).Tank) SR als Tank!",
        "enabled": true,
        "detection_type": "multi_inline_detection",
        "userlevel": "Subscriber"
      },
      {
        "uid": 2,
        "name": "!SUPPORT",
        "cooldown": "5s",
        "output": "Friky ist grade $(OWRankName $(SR.Season$(SR.CurrentSeason).Support)) mit $(SR.Season$(SR.CurrentSeason).Support) SR als Support!",
        "enabled": true,
        "detection_type": "multi_detection",
        "userlevel": "Subscriber"
      },
      {
        "uid": 3,
        "name": "!placements",
        "cooldown": "20s",
        "output": "DPS: $(SR.Season$(SR.CurrentSeason).Placements.DPS.Record) -> $(SR.Season$(SR.CurrentSeason).Placements.DPS.SR) SR | TANK: $(SR.Season$(SR.CurrentSeason).Placements.Tank.Record) -> $(SR.Season$(SR.CurrentSeason).Placements.Tank.SR) SR | SUPPORT: $(SR.Season$(SR.CurrentSeason).Placements.Support.Record) -> $(SR.Season$(SR.CurrentSeason).Placements.Support.SR) SR",
        "enabled": true,
        "detection_type": "multi_detection",
        "userlevel": "Moderator"
      },
      {
        "uid": 4,
        "name": "!placementsBETA",
        "cooldown": "20s",
        "output": "DPS: $(SR.BetaSeason.Placements.DPS.Record) -> $(SR.BetaSeason.Placements.DPS.SR) SR | TANK: $(SR.BetaSeason.Placements.Tank.Record) -> $(SR.BetaSeason.Placements.Tank.SR) SR | SUPPORT: $(SR.BetaSeason.Placements.Support.Record) -> $(SR.BetaSeason.Placements.Support.SR) SR",
        "enabled": true,
        "detection_type": "multi_detection",
        "userlevel": "Moderator"
      },
      {
        "uid": 5,
        "name": "!placements18",
        "cooldown": "1h",
        "output": "DPS: $(SR.Season18.Placements.DPS.Record) -> $(SR.Season18.Placements.DPS.SR) SR | TANK: $(SR.Season18.Placements.Tank.Record) -> $(SR.Season18.Placements.Tank.SR) SR | SUPPORT: $(SR.Season18.Placements.Support.Record) -> $(SR.Season18.Placements.Support.SR) SR",
        "enabled": true,
        "detection_type": "multi_detection",
        "userlevel": "Moderator"
      },
      {
        "uid": 5,
        "name": "!Skill",
        "cooldown": "1s",
        "output": "$(toUser) hat heute $(random 0 100)% Skill! dhaluSkill",
        "enabled": true,
        "detection_type": "multi_detection",
        "userlevel": "Follower"
      },
      {
        "uid": 5,
        "name": "2?",
        "cooldown": "1s",
        "output": "2?",
        "enabled": true,
        "detection_type": "multi_detection",
        "userlevel": "Regular"
      }
    ]
  }
}